@using CpsBoostAgile.Enumeration
@model CpsBoostAgile.Models.Retrospective.RetrospectiveViewModels
@{
    ViewBag.Title = "Retrospective";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.4.1.js"></script>
    <script type="text/javascript" src="~/signalr/hubs"></script>
    <script src="~/Scripts/clipboard.min.js"></script>
    <link href="~/Content/Custom/modalwindow.css" rel="stylesheet"/>
    <link href="~/Content/Custom/upperpanel.css" rel="stylesheet"/>
    <link href="~/Content/Custom/userscoloring.css" rel="stylesheet"/>
    <link href="~/Content/Custom/sidebar.css" rel="stylesheet"/>
    <link href="~/Content/Custom/loader.css" rel="stylesheet"/>
    <script>
    $(function () {
        var phase;
        var itemIdList = [];
        var retrospectiveId;

        $(document).ready(function () {

            // activate clipboard functionality
            var clipboard = new ClipboardJS('.btn');

            phase = '@Model.Phase';
            retrospectiveId = '@Model.Id';
            votes = '@Model.MaxVotesPerUser.GetValueOrDefault()';
            enableVoting = '@Model.EnableVoting';

            $('#div_availableVotes').text("Remaining votes: " + votes);
            if (phase !== '@PhaseEnum.Completed') {
            $('#modalLogin').modal('show');
            $('#modalLogin').find('input').focus();
            }

            switch (phase) {
            case '@PhaseEnum.Awaiting':
                startAwaitingPhase();
                break;
            case '@PhaseEnum.Running':
                setRunningPhase();
                break;
            case '@PhaseEnum.Presentation':
                switchToPresentationPhase();
                break;
            case '@PhaseEnum.Voting':
                switchToVotingPhase();
                break;
            case '@PhaseEnum.Completed':
                finishRetrospective();
                break;
            }

            if (phase !== '@PhaseEnum.Completed') {
            $('#modalLogin').on('shown.bs.modal',
                function() {
                    $('#modalNameInput').focus();
                });
            }

            var retroEventHub = $.connection.retrospectiveHub;

            retroEventHub.client.invalidLoginName = function (message) {
                $('#notValidName').show();
                $('#notValidName').text(message);
                $('#modalNameInput').focus();
            };

            retroEventHub.client.userConnected = function (name) {
                $('#modalLogin').modal('hide');
            };

            retroEventHub.client.setRetrospectiveRunningPhase = function () {
                phase = '@PhaseEnum.Running';
                setRunningPhase();
            }

            retroEventHub.client.setRetrospectivePresentationPhase = function () {
                phase = '@PhaseEnum.Presentation';
                switchToPresentationPhase();
            }

            retroEventHub.client.setRetrospectiveVotingPhase = function () {
                phase = '@PhaseEnum.Voting';
                switchToVotingPhase();
            }

            retroEventHub.client.finishRetrospectiveEvent = function () {
                phase = '@PhaseEnum.Completed';
                finishRetrospective();
            }

            retroEventHub.client.switchToReady = function () {
                $('#btn_ready').prop('disabled', true);
            }

            retroEventHub.client.receiveNewSharedItem = function (data) {
                var item = $.parseJSON(data);

                shareItem(item.Id, item.Group, item.CreatedBy, item.Text, item.TotalAssignedVotes, item.IsEnabledForVoting, item.Color); // IsEnabledForVoting delete?
            }

            retroEventHub.client.recieveSharedItems = function (data) {
                var sharedItems = $.parseJSON(data);

                for (var i = 0; i < sharedItems.length; i++)
                    shareItem(sharedItems[i].Id, sharedItems[i].Group, sharedItems[i].CreatedBy, sharedItems[i].Text, sharedItems[i].TotalAssignedVotes, sharedItems[i].IsEnabledForVoting, sharedItems[i].Color);

            }

            retroEventHub.client.updateOnlineUsers = function (data) {
                var items = $.parseJSON(data);
                var i;

                $('#list_users').empty();

                for (i = 0; i < items.length; i++) {
                    if (items[i].IsReadyToShare == true)
                    {
                        $('#list_users').append(
                            '<li><i class="glyphicon glyphicon-ok user' + items[i].Color + '"></i> ' + items[i].Name + '</li>'
                        );
                    }
                    else
                    {
                        $('#list_users').append(
                            '<li><i class="glyphicon glyphicon-user user' + items[i].Color + '"></i> ' + items[i].Name + '</li>'
                        );
                    }
                }
                $('#div_onlineUsers').text('Online Users: ' + i);
            };

            retroEventHub.client.assignVoteToSharedItem = function (data) {
                var item = $.parseJSON(data);

                columnType = item.Group;
                sharedItemId = item.Id;
                sharedItemVotes = item.TotalAssignedVotes;
                sharedItemEnableVoting = item.IsEnabledForVoting;

                remainedVotesForUser = item.RemainedVotesForParticularUser;
                $('#div_availableVotes').text("Remaining votes: " + remainedVotesForUser);
                if (remainedVotesForUser <= 0)
                    $('.btn_vote').prop('disabled', true);

                $("li").each(function (index) {
                    if ($(this).attr('name') == sharedItemId)
                    {
                        if (sharedItemEnableVoting == false)
                            $(this).find('.btn_vote').prop('disabled', true);

                        var element = $(this).find('.sharedItem_votes');
                        if (element.attr('votes') < sharedItemVotes)
                        {
                            element.text('Votes: ' + sharedItemVotes);
                            element.attr('votes', sharedItemVotes);
                        }
                    }
                });
            };

            $.connection.hub.logging = true;

            $.connection.hub.start().done(function () {
                if (phase == '@PhaseEnum.Completed') {
                    retroEventHub.server.restoreItemsAfterEvent('@Model.Id');
                }
            });

            $(document).on("click", '.shareBtn', function () {
                column = $(this).parent().parent().parent().attr('name');
                text = $(this).parent().parent().find('.preparedItem').val();

                $(this).parent().parent().remove();

                retroEventHub.server.shareRetrospectiveItem(column, text);
            });

            $(document).on('click', '.deleteBtn', function () {
                $(this).parent().parent().remove();
            });


            $(document).on('click', '.btn_vote', function () {
                var sharedIdGuid = $(this).parent().parent().parent().parent().parent().attr('name');

                retroEventHub.server.addVoteToSharedItem(sharedIdGuid);
            });

            $('#btn_ready').click(function () {
                retroEventHub.server.setUserReady();
            });

            $('#user_login').on('submit', function (e) {
                e.preventDefault();
                $('#notValidName').hide();
                retroEventHub.server.addRegularUserToPool($('#modalNameInput').val(), retrospectiveId);
            });

            $('#btn_start_addItem').click(function () {
                addItemToList('@("list_" + RetrospectiveColumnTypeEnum.Start)', "@RetrospectiveColumnTypeEnum.Start");
            });


            $('#btn_continue_addItem').click(function () {
                addItemToList('@("list_" + RetrospectiveColumnTypeEnum.Continue)', "@RetrospectiveColumnTypeEnum.Continue");
            });


            $('#btn_stop_addItem').click(function () {
                addItemToList('@("list_" + RetrospectiveColumnTypeEnum.Stop)', "@RetrospectiveColumnTypeEnum.Stop");
            });

        });


        function addItemToList(list, placeholder) {
            var item =
                $('<li class="list-group-item well clearfix listBlock">').append(
                    $('<textarea type="textarea" class="form-control preparedItem" rows="3" placeholder="' + placeholder + '"></textarea>' +
                        '<div class="btn-group" role="group">' +
                        '<input type="button" class="btn btn-success shareBtn" disabled value="Share"/>' +
                        '<input type="button" class="btn btn-danger deleteBtn" value="Delete"/>' +
                        '</div>'
                    ));
            $('#' + list).append(item);
            $(item).find('textarea').focus();
        };


        function shareItem(id, column, createdBy, text, totalVotes, isVotingEnabled, color) {
            var exist = false;
            var hidden = "hidden";
            var disabled = "";
            var listId;

            if (column == @((int)RetrospectiveColumnTypeEnum.Start))
                listId = '@("list_" + RetrospectiveColumnTypeEnum.Start)';
            else if (column == @((int)RetrospectiveColumnTypeEnum.Stop))
                listId = '@("list_" + RetrospectiveColumnTypeEnum.Stop)';
            else if (column == @((int)RetrospectiveColumnTypeEnum.Continue))
                listId = '@("list_" + RetrospectiveColumnTypeEnum.Continue)';

            if (enableVoting == "True" && (phase == '@PhaseEnum.Voting' || phase == '@PhaseEnum.Completed' ))
                hidden = "";

            if (isVotingEnabled == false)
                disabled = "disabled";

            for (var i = 0; i < itemIdList.length; i++) {
                if (id == itemIdList[i])
                    exist = true;
            }

            if (exist == false) {
                itemIdList.push(id);

                $('#' + listId).prepend(
                    $('<li class="list-group-item well well-sm item-shared' + color + ' clearfix" name="' + id + '" column="' + column + '">').append(
                        $('<div class="text-center">' + text + '<div>' +
                            '<div class="row sharedItem_voting_panel"' + hidden + '>' +
                            '<div class="col-md-6 text-left">' +
                            '<div class="sharedItem_votes" votes="' + totalVotes + '">Votes: ' + totalVotes + '</div>' +
                            '</div>' +
                            '<div class="col-md-6 text-right">' +
                            '<input type="button" class="btn btn-xs btn-success btn_vote" ' + disabled + ' value="Vote"/>' +
                            '</div>' +
                            '</div>'
                        )));
            }

            if (phase == '@PhaseEnum.Completed') {
                $('.btn_vote').hide();
            }
        };



        function disableAddItemsBtn(value) {
            $('#btn_start_addItem').prop('disabled', value);
            $('#btn_continue_addItem').prop('disabled', value);
            $('#btn_stop_addItem').prop('disabled', value);
        };

        function startAwaitingPhase() {
            disableAddItemsBtn(true);
            $('#awaiting_phase_panel').show();
        };

        function setRunningPhase() {
            $('#awaiting_phase_panel').hide();
            $('#running_phase_panel').show();
            disableAddItemsBtn(false);
        };

        function switchToPresentationPhase() {
            $('#awaiting_phase_panel').hide();
            $('#running_phase_panel').hide();
            $('#presentation_phase_panel').show();
            $('.preparedItem').prop('disabled', true);
            disableAddItemsBtn(true);

            $('.shareBtn').prop('disabled', false);
        };

        function switchToVotingPhase() {
            $('.preparedItem').hide();
            $('#awaiting_phase_panel').hide();
            $('#running_phase_panel').hide();
            $('#presentation_phase_panel').hide();
            $("#voting_phase_panel").show();
            disableAddItemsBtn(true);
            $('.sharedItem_voting_panel').show();
            $('.preparedItem').parent().remove();
        };

        function finishRetrospective() {
            $('.preparedItem').hide();
            $('.btn_vote').hide();

            $('#awaiting_phase_panel').hide();
            $('#running_phase_panel').hide();
            $('#presentation_phase_panel').hide();
            $("#voting_phase_panel").hide();
            $("#completed_phase_panel").show();
            disableAddItemsBtn(true);
        };

    });
    </script>
}


        <div class="modal fade" id="modalLogin" hidden tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header modal-header-primary text-center">
                        <h1>You are entering Retrospective</h1>
                    </div>
                    <div class="modal-body">
                        <form id="user_login" class="form-horizontal">
                            <div class="form-group row">
                                <label class="control-label col-sm-2">Name:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="modalNameInput" name="modalNameInput" placeholder="Enter your name:">
                                    <div class="validation-msg" id="notValidName" hidden></div>
                                </div>
                            </div>
                            <input type="submit" value="Enter" class="btn btn-primary onclick=" return false"" />
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div id="onlineUsersNavigationBar" class="sidenav">
                <h5 id="div_onlineUsers"></h5>
                <ul class="list-group" id="list_users"></ul>
            </div>

            <div id="main">
                <div class="well">
                   <div class="row text-center" hidden id="awaiting_phase_panel">
                        <div class="loader"></div>
                        <h3>Please wait till Moderator starts Retrospective.</h3>
                   </div>

                    <div class="row text-center" hidden id="running_phase_panel">
                        <div class="col-sm-3">
                            <div class="btn-group btn-group-lg pull-left" role="group">
                                <button type="button" id="btn_ready" class="btn btn-primary text-center">I am ready to share</button>
                            </div>
                        </div>
                        <div class="col-sm-9">
                            <div>Start: what should we start doing next sprint?</div>
                            <div>Stop: what blocks your full potential and should cease?</div>
                            <div>Continue: what you or your team are doing best?</div>
                        </div>
                    </div>

                    <div class="row text-center" hidden id="presentation_phase_panel">
                        <h3>Share and discuss your ideas!</h3>
                    </div>

                    <div class="row text-center" hidden id="voting_phase_panel">
                        <h3>Vote for shared ideas!</h3>
                        <div id="div_availableVotes"></div>
                    </div>

                    <div class="row text-center" hidden id="completed_phase_panel">
                        <h3>Retrospective is finished! Thank you for participation!</h3>
                        <div class="btn-group btn-group-lg" role="group" aria-label="...">
                            <button onclick="location.href='@Url.Action("Export", "Event", new {Model.Id})'" style="background-color:green" type="button" class="btn btn-primary text-center">Export to Excel</button>
                        </div>
                    </div>
                </div>

                <div class="row" >
                    <div class="col-sm-4 text-center">
                        <div class="title-marketing"><h3>@RetrospectiveColumnTypeEnum.Start</h3></div>
                        <ul class="list-group" name="Start" id="@("list_" + RetrospectiveColumnTypeEnum.Start)"></ul>
                        <button type="button" id="btn_start_addItem" disabled class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
                    </div>
                    <div class="col-sm-4 text-center">
                        <div class="title-marketing"><h3>@RetrospectiveColumnTypeEnum.Stop</h3></div>
                        <ul class="list-group" name="Stop" id="@("list_" + RetrospectiveColumnTypeEnum.Stop)"></ul>
                        <button type="button" id="btn_stop_addItem" disabled class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
                    </div>
                    <div class="col-sm-4 text-center">
                        <div class="title-marketing"><h3>@RetrospectiveColumnTypeEnum.Continue</h3></div>
                        <ul class="list-group" name="Continue" id="@("list_" + RetrospectiveColumnTypeEnum.Continue)"></ul>
                        <button type="button" id="btn_continue_addItem" disabled class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i></button>
                    </div>
                </div>

            </div>
        </div>

