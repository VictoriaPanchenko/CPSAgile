@using CpsBoostAgile.Models.Retrospective
@model RetrospectiveViewModels
@{
    ViewBag.Title = "Create new Retrospective session";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    <div class="container">
        <form class="form-horizontal">
            @Html.AntiForgeryToken()
            <h2>Create new Retrospective event</h2>
            <br>
            @Html.ValidationSummary(true)
            <div class="form-group row">
                @Html.LabelFor(m => m.RetrospectiveName, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.RetrospectiveName, new { @class = "form-control", @placeholder = "Enter Event Name" })
                    @Html.ValidationMessageFor(m => m.RetrospectiveName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.Project, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Project, new { @class = "form-control", @placeholder = "Enter Project Name" })
                    @Html.ValidationMessageFor(m => m.Project, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.Sprint, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Sprint, new { @class = "form-control", @placeholder = "Enter Sprint" })
                    @Html.ValidationMessageFor(m => m.Sprint, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.Team, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Team, new { @class = "form-control", @placeholder = "Enter Team Name" })
                    @Html.ValidationMessageFor(m => m.Team, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.Comment, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextArea("Comment", null, new { @class = "form-control", @placeholder = "Enter Comment" })
                    @Html.ValidationMessageFor(m => m.Comment, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.EnableVoting, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.CheckBoxFor(x => x.EnableVoting)
                </div>
            </div>
            <div class="form-group row" id="maxVotes" hidden="true">
                @Html.LabelFor(m => m.MaxVotesPerUser, new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.MaxVotesPerUser, new { @class = "form-control", @type="number", @min="1", @step="1", @placeholder = "Available votes per one user" })
                    @Html.ValidationMessageFor(m => m.MaxVotesPerUser, "", new { @class = "text-danger" })
                </div>
            </div>
            <input type="submit" value="Create" class="btn btn-primary" />
        </form>
    </div>

}

@section scripts
{
    <script>

        $(document).ready(function() {
            $("#EnableVoting").removeAttr("checked");
        });

        $('#EnableVoting').change(function() {
            $('#maxVotes').attr('hidden', !this.checked);

            if ($(this).prop("checked") == false) {
                $('#MaxVotesPerUser').val("");
            } 
        });
    </script>
}